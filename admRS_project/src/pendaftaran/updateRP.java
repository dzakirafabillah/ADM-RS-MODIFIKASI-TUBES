/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pendaftaran;

import AdministrasiRS.DBConnection;
import java.awt.Color;
import java.awt.Font;
import java.awt.SystemColor;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author DZAKIRA
 */
public class updateRP extends javax.swing.JFrame {
    Object[][] riwayatPendaftaran;
    /**
     * Creates new form updateRP
     */
    public updateRP(String noRegis) {
        riwayatPendaftaran = updateRP2.getSearch(noRegis);
        initComponents();
        if (riwayatPendaftaran[0][7] != null){
           diagnosa.setText((riwayatPendaftaran[0][7]).toString()); 
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelHeader2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        diagnosa = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelHeader2.setText("UPDATE PENDAFTARAN");
        labelHeader2.setFont(new Font("Century Gothic", Font.BOLD, 28));
        labelHeader2.setForeground(new Color(119,136,153));
        labelHeader2.setBounds(114, 68, 213, 59);
        labelHeader2.setHorizontalAlignment(SwingConstants.CENTER);

        jLabel3.setText("Diagnosa");

        submit.setText("Submit");
        submit.setBackground(new Color(119,136,153));
        submit.setForeground(SystemColor.menu);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        btnBack.setText("Kembali");
        btnBack.setBackground(new Color(119,136,153));
        btnBack.setForeground(SystemColor.menu);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 486, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelHeader2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnBack)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(submit))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(91, 91, 91)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(diagnosa, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(72, 72, 72)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 425, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(labelHeader2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(55, 103, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(diagnosa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addGap(162, 162, 162)
                            .addComponent(submit)
                            .addGap(70, 70, 70)))
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        String diag = diagnosa.getText();
        
        String noRegis = (riwayatPendaftaran[0][0]).toString();

        updateRP2.updRP(noRegis, diag);

        diagnosa.setText("");
    }//GEN-LAST:event_submitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        listPendaftaran start = new listPendaftaran();
        start.run();
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    public void run(String noReg) {
                updateRP start = new updateRP(noReg);
                start.getContentPane().setBackground(new Color(204,229,255));
                start.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JTextField diagnosa;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel labelHeader2;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}

class updateRP2 {
     static Connection con = DBConnection.getConnection();
     
     static void updRP(String noRegis, String diagnosa){
         
         CallableStatement stmt = null;
         Scanner input = new Scanner(System.in);
         
         try{
			con = DBConnection.getConnection();
			stmt = con.prepareCall("{call RIWAYAT_PENDAFTARAN_UPDATE(?,?)}");
			stmt.setString(1, noRegis);
			stmt.setString(2, diagnosa);
			
			stmt.executeUpdate();
			
                        JOptionPane.showMessageDialog(null, "Update Riwayat Pendaftaran Berhasil Dilakukan");
                        
		}catch(Exception e){
//			e.printStackTrace();
                        JOptionPane.showMessageDialog(null, "Update Riwayat Pendaftaran Gagal Dilakukan");
		}finally{
			try {
				stmt.close();
				con.close();
				input.close();
			} catch (SQLException e) {
//				e.printStackTrace();
			}
		}
         
     }



   

    static Object[][] getSearch(String noRegis){
      
      PreparedStatement pst = null;
      
      String sql = "select * from RIWAYAT_PENDAFTARAN WHERE no_registrasi = '" + noRegis + "'";
      ResultSet st;
      int size = 0;
      Object[][] result =  new Object[1][8];
        
        try {
            pst = con.prepareStatement(sql);
            
            st=pst.executeQuery();
            int i=0;
            while(st.next()){
                for (int k =1; k<9 ;k++){
                    result[i][k-1] = st.getString(k);
                }
                i++;
            }
            
            pst.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(updateRP2.class.getName()).log(Level.SEVERE, null, ex);
         
        }  
        return result;
        
    }


}
