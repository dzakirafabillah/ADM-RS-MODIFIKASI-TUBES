/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package keuangan;

import AdministrasiRS.DBConnection;
import java.awt.Color;
import java.awt.Font;
import java.awt.SystemColor;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author DZAKIRA
 */
public class IDPembayaran extends javax.swing.JFrame {

    /**
     * Creates new form IDPembayaran
     */
    public IDPembayaran() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelHeader4 = new javax.swing.JLabel();
        labelHeader5 = new javax.swing.JLabel();
        idDok = new javax.swing.JLabel();
        field_idP = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelHeader4.setFont(new Font("Century Gothic", Font.BOLD, 28));
        labelHeader4.setForeground(new Color(119,136,153));
        labelHeader4.setBounds(114, 68, 213, 59);
        labelHeader4.setHorizontalAlignment(SwingConstants.CENTER);
        labelHeader4.setText("Update Status Pembayaran");

        labelHeader5.setText("Update status pembayaran menjadi sudah dibayar");
        //labelHeader.setFont(new Font("Century Gothic", Font.BOLD, 28));
        //labelHeader.setForeground(new Color(119,136,153));

        idDok.setText("ID Pembayaran");

        submit.setText("Update Now");
        submit.setBackground(new Color(119,136,153));
        submit.setForeground(SystemColor.menu);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        btnBack.setText("Kembali");
        btnBack.setBackground(new Color(119,136,153));
        btnBack.setForeground(SystemColor.menu);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelHeader4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(submit)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(idDok, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(43, 43, 43)
                                    .addComponent(field_idP, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(labelHeader5))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnBack)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelHeader4)
                .addGap(97, 97, 97)
                .addComponent(labelHeader5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idDok)
                    .addComponent(field_idP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        if(searchID.search(field_idP.getText())){
            JOptionPane.showMessageDialog(null, "Dokter dengan ID " + field_idP.getText() + " tidak ditemukan");
        }else{
            searchID.updStatusPembayaran(field_idP.getText());
        }
    }//GEN-LAST:event_submitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        listPembayaran start = new listPembayaran();
        start.run();
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IDPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IDPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IDPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IDPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IDPembayaran().setVisible(true);
            }
        });
    }
    
    public void run() {
                IDPembayaran calcu = new IDPembayaran();
                calcu.getContentPane().setBackground(new Color(204,229,255));
                calcu.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JTextField field_idP;
    private javax.swing.JLabel idDok;
    private javax.swing.JLabel labelHeader4;
    private javax.swing.JLabel labelHeader5;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}

class searchID { 
    static Connection con = DBConnection.getConnection();
    
    static boolean search(String idP){
      
      PreparedStatement pst = null;
      
      String sql = "select * from PEMBAYARAN WHERE id_pembayaran = '" + idP + "'";
      ResultSet st;
      int size = 0;
      Object[][] result =  new Object[0][4];
        
        try {
            pst = con.prepareStatement(sql);
            st=pst.executeQuery();
            while(st.next()){
                size++;
            }
            result =  new Object[size][4];
            
            st=pst.executeQuery();
            int i=0;
            while(st.next()){
                for (int k =1; k<5 ;k++){
                    result[i][k-1] = st.getString(k);
                }
                i++;
            }
            
            pst.close();
            System.out.println(result.length == 0);
            
        } catch (SQLException ex) {
            Logger.getLogger(searchID.class.getName()).log(Level.SEVERE, null, ex);
        }  
        return (result.length == 0);
        
    }
    static void updStatusPembayaran(String idP){
         
         CallableStatement stmt = null;
         Scanner input = new Scanner(System.in);
         
         try{
			con = DBConnection.getConnection();
			stmt = con.prepareCall("{call PEMBAYARAN_UPDATE_SUDAH_BAYAR(?)}");
			stmt.setString(1, idP);
			
			stmt.executeUpdate();
			
                        JOptionPane.showMessageDialog(null, "Status Pembayaran Berubah Menjadi Sudah Dibayar");
                        
		}catch(Exception e){
//			e.printStackTrace();
                        JOptionPane.showMessageDialog(null, "Update Status Pembayaran Gagal Dilakukan");
		}finally{
			try {
				stmt.close();
//				con.close();
				input.close();
			} catch (SQLException e) {
//				e.printStackTrace();
			}
		}
         
     }
}

