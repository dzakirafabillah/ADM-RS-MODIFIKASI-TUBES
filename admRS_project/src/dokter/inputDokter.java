package dokter;

import AdministrasiRS.*;
import java.awt.*;
import javax.swing.*;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author HP
 */
public class inputDokter extends javax.swing.JFrame {

    /**
     * Creates new form inputDokter
     */
    String namaPol = "";
    
    public inputDokter() {
       
    }
     
    public inputDokter(String namaPoliklinik) {
        namaPol = namaPoliklinik;
        initComponents();
        System.out.println(namaPol);
        System.out.println("MASUK");
        if (namaPol == ""){
            String[] polList = new String[100];
            polList = poliklinik.getPoliklinik();
            for (int j = 0; j < 100; j++) {
                if (polList[j] != null){
                    choicePoliklinik.addItem(polList[j]);
                }
            }
        }else{
            //String id = poliklinik.getIdPoliklinik(namaPol);
            choicePoliklinik.addItem(namaPol);
        }
        
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Nama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        No = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Phone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Spesialisasi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Gaji = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Submit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        choicePoliklinik = new java.awt.Choice();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new Font("Century Gothic", Font.BOLD, 28));
        jLabel1.setForeground(new Color(119,136,153));
        jLabel1.setBounds(114, 68, 213, 59);
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel1.setText("TAMBAH DOKTER");

        jLabel2.setText("Nama ");

        jLabel3.setText("No Izin Praktek");

        jLabel4.setText("Phone Number");

        jLabel5.setText("Spesialisasi");

        jLabel6.setText("Gaji");

        jLabel7.setText("ID Poliklinik");

        Submit.setText("Submit");
        Submit.setBackground(new Color(119,136,153));
        Submit.setForeground(SystemColor.menu);
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        btnBack.setText("Kembali");
        btnBack.setBackground(new Color(119,136,153));
        btnBack.setForeground(SystemColor.menu);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(115, 406, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Submit)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Gaji)
                            .addComponent(Spesialisasi)
                            .addComponent(Phone)
                            .addComponent(No)
                            .addComponent(Nama)
                            .addComponent(choicePoliklinik, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(No, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Spesialisasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Gaji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(choicePoliklinik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addComponent(Submit)
                        .addContainerGap(94, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        String nm = Nama.getText();
        String no = No.getText();
        String phone = Phone.getText();
        String spes = Spesialisasi.getText();
        String gaji = Gaji.getText();
        String id = choicePoliklinik.getSelectedItem();
        
        if(namaPol != ""){
            if(namaPol != "" && (nm.equals("") || no.equals("") || phone.equals("") 
                || spes.equals("") || gaji.equals("") )){
                JOptionPane.showMessageDialog(null, "Masukan minimal satu dokter !");
            }else{
                tambah.addPoliklinik(namaPol);
                String idNewPol = poliklinik.getIdPoliklinik(namaPol);
                String hasil = tambah.addDokter(nm,no,phone,spes,gaji,idNewPol);
                if (hasil != "Record Save Success::"){
                    this.clear();
                }else{
                    btnBackActionPerformed(evt);
                }
            }
        }else{
            tambah.addDokter(nm,no,phone,spes,gaji,id);
            this.clear();
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        String nm = Nama.getText();
        String no = No.getText();
        String phone = Phone.getText();
        String spes = Spesialisasi.getText();
        String gaji = Gaji.getText();
        
        System.out.println(nm.equals(""));
        if(namaPol != "" && (nm.equals("") || no.equals("") || phone.equals("") 
                || spes.equals("") || gaji.equals("") )){
            JOptionPane.showMessageDialog(null, "Masukan minimal satu dokter !");
        }else{
            viewDokter start = new viewDokter();
            start.run();
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputDokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputDokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputDokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputDokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new inputDokter().setVisible(true);
        });
        
    }
    
    public void run() {
        inputDokter calcu = new inputDokter(namaPol);
        calcu.getContentPane().setBackground(new Color(204,229,255));
        calcu.setVisible(true);
    }
    
    public void clear(){
        Gaji.setText("");
        Nama.setText("");
        No.setText("");
        Phone.setText("");
        Spesialisasi.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Gaji;
    private javax.swing.JTextField Nama;
    private javax.swing.JTextField No;
    private javax.swing.JTextField Phone;
    private javax.swing.JTextField Spesialisasi;
    private javax.swing.JButton Submit;
    private javax.swing.JButton btnBack;
    private java.awt.Choice choicePoliklinik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}

class poliklinik { 
    static Connection con = DBConnection.getConnection();

    static String[] getPoliklinik(){
           
      PreparedStatement pst = null;
      String[] arrPoliklinik = new String[100];
      String sql = "select * from POLIKLINIK";
      ResultSet st;
         
        try {
            pst = con.prepareStatement(sql);
            st=pst.executeQuery();
            int i = 0; 
            while(st.next()){
                arrPoliklinik[i] = st.getString(1);
                i++;
            }
            pst.close();
        } catch (SQLException ex) {
            Logger.getLogger(poliklinik.class.getName()).log(Level.SEVERE, null, ex);
        }
        return arrPoliklinik;
    }
    
    static String getIdPoliklinik(String namaPol){
           
      PreparedStatement pst = null;
      String[] arrPoliklinik = new String[100];
      String sql = "select * from POLIKLINIK WHERE nama_poliklinik = '" + namaPol + "'" ;
      ResultSet st;
         
        try {
            pst = con.prepareStatement(sql);
            st=pst.executeQuery();
            int i = 0; 
            while(st.next()){
                arrPoliklinik[i] = st.getString(1);
                i++;
            }
            pst.close();
        } catch (SQLException ex) {
            Logger.getLogger(poliklinik.class.getName()).log(Level.SEVERE, null, ex);
        }
        return arrPoliklinik[0];
    }
    
    
    
}